=provide(:title, "Index")
<!-- Set up the filter selector -->
.well
  %div{:class => "dropdown theme-dropdown clearfix"}
    %button{:class => "btn btn-default dropdown-toggle", :type => "button", :'data-toggle' => "dropdown"}
      Filter by...
    %form{:id => "filter-selector", :class => "dropdown-menu", :action => "about", :method => "GET"}

  <!-- Set up the filter form -->
  %form{:id => "filter-form"}
    %table{:id => "filter-table", :class => "table"}
    %input{:id => "filter-apply", :type => "submit", :value => "Apply Filters", :class => "btn btn-default"}

  <!-- Hiding Columns -->
  %div{:class => "dropdown theme-dropdown clearfix"}
    %button{:class => "btn btn-default dropdown-toggle", :type => "button", :'data-toggle' => "dropdown"}
      Hide by...
    %form{:id => "hide-selector", :class => "dropdown-menu", :action => "about", :method => "GET"}
  
<!-- Top Pagination Bar -->
%center
  = will_paginate @matrices, renderer: BootstrapPagination::Rails
  .pull-right.pagination
    Display per page: 
    = select_tag :per_page, options_for_select([20,50,100,"All"], params[:per_page]), :onchange => "if(this.value){window.location='?per_page='+this.value;}"

<!-- Layout the matrix table -->
%table{:id => "matrices", :class => "table table-striped"}
  %thead
    %tr{:id => 'sort-selector'}
      %th{:id => 'download-header'} Download File
  %tbody
    - @matrices.each do |matrix|
      %tr
        %td{class: "column-group"}= link_to "#{matrix.group}", matrix_path(matrix)
        %td{class: "column-name"}= link_to "#{matrix.name}", matrix_path(matrix)
        %td{class: "column-num_rows"}= number_with_delimiter(matrix.num_rows, :delimiter => ',')
        %td{class: "column-num_cols"}= number_with_delimiter(matrix.num_cols, :delimiter => ',')
        %td{class: "column-nonzeros"}= number_with_delimiter(matrix.nonzeros, :delimiter => ',')
        %td{class: "column-kind"}= matrix.kind.titleize unless matrix.kind.nil?
        %td{class: "column-date"}= matrix.date
        %td
          = link_to "MATLAB", matrix.get_url(:matlab), class: "btn btn-default"
          = link_to "Rutherford Boeing", matrix.get_url(:rutherford_boeing), class: "btn btn-default"
          = link_to "Matrix Market", matrix.get_url(:matrix_market), class: "btn btn-default"
    %tr
      %td{:colspan => 42, :align => "center"}
        = will_paginate @matrices, renderer: BootstrapPagination::Rails
        .pull-right.pagination
          Display per page: 
          = select_tag :per_page, options_for_select([20,50,100,"All"], params[:per_page]), :onchange => "if(this.value){window.location='?per_page='+this.value;}"

<!-- Create the filters -->
:javascript
  generateFilters(#{Matrix.filterable_attributes});
  $(function() {$('[data-toggle="tooltip"]').tooltip()});
  populateFilters(#{session[:filter].to_json});
  
<!-- Create the hiders -->
:javascript
  generateHides(#{Matrix.sortable_attributes});
  $(function() {$('[data-toggle="tooltip"]').tooltip()});
  //hideHides();

<!-- Create the sorters -->
:javascript
  generateSorters(#{Matrix.sortable_attributes});

<!-- Highlight the sort attribute if there is one -->
- if !session[:sort].nil?
  :javascript
    highlightSortAttribute("#{session[:sort]}");