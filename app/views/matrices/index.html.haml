=provide(:title, "Index")

.alert.alert-info.alert-dismissible.about-alert
  %button.close.about-close{:type => "button", :'data-dismiss' => "alert", :'aria-label' => "Close"}
    %span{:'aria-hidden' => "true"}
      &times;
  The SuiteSparse Matrix Collection (formerly the University of Florida Sparse Matrix Collection) is a widely used set of sparse matrix benchmarks collected from a wide range of applications. See the
  = link_to "about page", about_path, class: "alert-link"
  for more information.

.well.container-fluid
  .col-xs-2.column.text-center{style: "border-right: 1px solid #e3e3e3;"}
    %br
    .dropdown
      %button.btn.btn-default.dropdown-toggle{type: "button", id: "filter-dropdown", 'data-toggle': "dropdown", 'aria-haspopup': "true", 'aria-expanded': "true" }
        %i.fa.fa-filter{'aria-hidden': "true"}
        Filters
        %i.fa.fa-caret-down{'aria-hidden': "true"}
      %ul.dropdown-menu{'aria-labelledby': 'filter-dropdown'}
        %li
          .small{'data-target': ".rows-checkbox", tabIndex: "-1"}
            = check_box_tag :rows_checkbox, 'enable', false, class: "filter-checkbox rows-checkbox", 'data-target': "#rows-filter"
            = label_tag :rows_checkbox, "Rows"
        %li
          .small{'data-target': ".columns-checkbox", tabIndex: "-1"}
            = check_box_tag :columns_checkbox, 'enable', false, class: "filter-checkbox columns-checkbox", 'data-target': "#columns-filter"
            = label_tag :columns_checkbox, "Columns"
        %li
          .small{'data-target': ".nonzeros-checkbox", tabIndex: "-1"}
            = check_box_tag :nonzeros_checkbox, 'enable', false, class: "filter-checkbox nonzeros-checkbox", 'data-target': "#nonzeros-filter"
            = label_tag :nonzeros_checkbox, "Nonzeros"
        %li
          .small{'data-target': ".pattern-symmetry-checkbox", tabIndex: "-1"}
            = check_box_tag :pattern_symmetry_checkbox, 'enable', false, class: "filter-checkbox pattern-symmetry-checkbox", 'data-target': "#pattern-symmetry-filter"
            = label_tag :pattern_symmetry_checkbox, "Pattern Symmetry"
        %li
          .small{'data-target': ".numerical-symmetry-checkbox", tabIndex: "-1"}
            = check_box_tag :numerical_symmetry_checkbox, 'enable', false, class: "filter-checkbox numerical-symmetry-checkbox", 'data-target': "#numerical-symmetry-filter"
            = label_tag :numerical_symmetry_checkbox, "Numerical Symmetry"
        %li
          .small{'data-target': ".positive-definiteness-checkbox", tabIndex: "-1"}
            = check_box_tag :positive_definiteness_checkbox, 'enable', false, class: "filter-checkbox positive-definiteness-checkbox", 'data-target': "#positive-definiteness-filter"
            = label_tag :positive_definiteness_checkbox, "Positive Definiteness"
  <!-- Set up the filter form -->
  .col-xs-10.column.text-center{style: "margin-left: -1px; border-left: 1px solid #e3e3e3;"}
    = form_for_filterrific @filterrific do |f|
      #search.well.well-sm
        = f.label :search_query, "Search"
        = f.text_field :search_query, class: 'filterrific-periodically-observed'
      #rows-filter.filter.filter-hidden.well.well-sm
        .input-with-label
          = f.text_field :min_rows, class: 'filterrific-periodically-observed', id: "filter-input-rows-min"
          = label_tag 'filter-input-rows-min', "Min"
        &le; Number of Rows &le;
        .input-with-label
          = f.text_field :max_rows, class: 'filterrific-periodically-observed', id: "filter-input-rows-max"
          = label_tag 'filter-input-rows-max', "Max"
      #columns-filter.filter.filter-hidden.well.well-sm
        .input-with-label
          = f.text_field :min_cols, class: 'filterrific-periodically-observed', id: 'filter-input-columns-min'
          = label_tag 'filter-input-columns-min', "Min"
        &le; Number of Columns &le;
        .input-with-label
          = f.text_field :max_cols, class: 'filterrific-periodically-observed', id: 'filter-input-columns-max'
          = label_tag 'filter-input-columns-max', "Max"
      #nonzeros-filter.filter.filter-hidden.well.well-sm
        .input-with-label
          = f.text_field :min_nonzeros, class: 'filterrific-periodically-observed', id: 'filter-input-nonzeros-min'
          = label_tag 'filter-input-nonzeros-min', "Min"
        &le; Number of Nonzeros &le;
        .input-with-label
          = f.text_field :max_nonzeros, class: 'filterrific-periodically-observed', id: 'filter-input-nonzeros-max'
          = label_tag 'filter-input-nonzeros-max', "Max"
      #pattern-symmetry-filter.filter.filter-hidden.well.well-sm
        .input-with-label
          = f.text_field :min_pattern_symmetry, class: 'filterrific-periodically-observed', id: 'filter-input-pattern_symmetry-min'
          = label_tag 'filter-input-pattern_symmetry-min', "Min (%)"
        &le; Pattern Symmetry &le;
        .input-with-label
          = f.text_field :max_pattern_symmetry, class: 'filterrific-periodically-observed', id: 'filter-input-pattern_symmetry-max'
          = label_tag 'filter-input-pattern_symmetry-max', "Max (%)"
      #numerical-symmetry-filter.filter.filter-hidden.well.well-sm
        .input-with-label
          = f.text_field :min_numerical_symmetry, class: 'filterrific-periodically-observed', id: 'filter-input-numerical_symmetry-min'
          = label_tag 'filter-input-numerical_symmetry-min', "Min (%)"
        &le; Numerical Symmetry &le;
        .input-with-label
          = f.text_field :max_numerical_symmetry, class: 'filterrific-periodically-observed', id: 'filter-input-numerical_symmetry-max'
          = label_tag 'filter-input-numerical_symmetry-max', "Max (%)"
      .well.well-sm
        = f.label :sorted_by, "Sorted by"
        = f.select :sorted_by, @filterrific.select_options[:sorted_by]
    = render_filterrific_spinner

#filterrific_results
  = render partial: 'matrices/list', locals: { matrices: @matrices }

:javascript
  $(function() {
      // Check if alert has been closed
      if( Cookies.get('about-box') === 'closed' ){
          $('.about-alert').hide();
      }
      $('.about-close').click(function( e ){
          // Do not perform default action when button is clicked
          e.preventDefault();
          Cookies.set('about-box', 'closed');
      });
  });

:javascript
  $(function() {
    $(".filter-checkbox").change(function() {
      if(this.checked) {
        $($(this).data("target")).removeClass('filter-hidden');
      } else {
        $($(this).data("target")).addClass('filter-hidden');
      }
    });
  });

:javascript
  $(function() {
    $('.dropdown-menu').find('.small').click(function(e) {
      if(e.target.type !== 'checkbox' && e.target.nodeName !== 'LABEL') {
        // If the click is on the checkbox or label, no need to click twice
        $($(this).data("target")).trigger('click');
      }
      // Keep the dropdown menu open until we click elsewhere
      e.stopPropagation();
    });
  });