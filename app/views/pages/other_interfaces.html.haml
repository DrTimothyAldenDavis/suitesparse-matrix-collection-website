=provide(:title, "Interfaces")

%h2 Other Interfaces
%p
  Here are some other ways to access the collection.

%hr

%h2= link_to "UFgui Java interface:", "https://www.cise.ufl.edu/research/sparse/mat/UFget.html"
%p
  The #{link_to "UFget", "https://www.cise.ufl.edu/research/sparse/mat/UFget.html"}
  package includes a Java program (UFgui) for browsing and downloading the
  matrices in any format on any platform. Below is a screenshot (click on it to
  download the code):

%div
  #{link_to image_tag("https://www.cise.ufl.edu/research/sparse/mat/UFgui_screenshot.png", alt: "UFgui screenshot"), "https://www.cise.ufl.edu/research/sparse/mat/UFget.html"}

%hr

%h2 MATLAB and Stand-alone Java GUI:
%p
  #{link_to "Click here for the UFget MATLAB and","https://www.cise.ufl.edu/research/sparse/mat/UFget.html"}.
  UFget.m provides
  for simple access to the collection, right inside your MATLAB workspace.
  From inside MATLAB, UFget will download a matrix, cache it locally, and
  load it into your MATLAB workspace.  No need to use a browser to get a matrix.
  You can even use the built-in index to search for matrices that fit your
  criteria ... all inside MATLAB.
  For example, to download all symmetric matrices
  into MATLAB, in increasing size as measured by nnz(A):
  %pre
    = preserve do
      :escaped
        index = UFget ;           % get index of the UF Sparse Matrix Collection
        ids = find (index.numerical_symmetry == 1) ;
        [ignore, i] = sort (index.nnz (ids)) ;
        ids = ids (i) ;
        for id = ids
          Prob = UFget (id)     % Prob is a struct (matrix, name, meta-data, ...)
          A = Prob.A ;          % A is a symmetric sparse matrix

%hr

%h2 Julia Interface:
%p
  #{link_to "Weijian Zhang", "http://www.maths.manchester.ac.uk/~weijian/"}, at the University of Manchester, has created a
  #{link_to "Julia interface to the UF collection", "http://matrixdepotjl.readthedocs.org/en/latest/interface.html#interfaces"}.
